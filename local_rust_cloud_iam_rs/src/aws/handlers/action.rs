use std::collections::HashMap;

use actix_http::{
    body::BoxBody,
    header::{HeaderName, HeaderValue},
    StatusCode,
};
use actix_web::{web::Data, HttpRequest, HttpResponse};
use aws_smithy_xml::encode::XmlWriter;
use futures::executor::block_on;
use local_rust_cloud_common::service_handler::ServiceHandler;
use local_rust_cloud_sqlite::Database;
use uuid::Uuid;

use super::{query::QueryReader, constants::XMLNS};

pub enum Iam {
    AddRoleToInstanceProfile,
    AddUserToGroup,
    AttachGroupPolicy,
    AttachRolePolicy,
    AttachUserPolicy,
    ChangePassword,
    CreateAccessKey,
    CreateAccountAlias,
    CreateGroup,
    CreateInstanceProfile,
    CreateLoginProfile,
    CreateOpenIdConnectProvider,
    CreatePolicy,
    CreatePolicyVersion,
    CreateRole,
    CreateSamlProvider,
    CreateServiceLinkedRole,
    CreateServiceSpecificCredential,
    CreateUser,
    CreateVirtualMfaDevice,
    DeactivateMfaDevice,
    DeleteAccessKey,
    DeleteAccountAlias,
    DeleteAccountPasswordPolicy,
    DeleteGroup,
    DeleteGroupPolicy,
    DeleteInstanceProfile,
    DeleteLoginProfile,
    DeleteOpenIdConnectProvider,
    DeletePolicy,
    DeletePolicyVersion,
    DeleteRole,
    DeleteRolePermissionsBoundary,
    DeleteRolePolicy,
    DeleteSamlProvider,
    DeleteServerCertificate,
    DeleteServiceLinkedRole,
    DeleteServiceSpecificCredential,
    DeleteSigningCertificate,
    DeleteSshPublicKey,
    DeleteUser,
    DeleteUserPermissionsBoundary,
    DeleteUserPolicy,
    DeleteVirtualMfaDevice,
    DetachGroupPolicy,
    DetachRolePolicy,
    DetachUserPolicy,
    EnableMfaDevice,
    GenerateCredentialReport,
    GenerateOrganizationsAccessReport,
    GenerateServiceLastAccessedDetails,
    GetAccessKeyLastUsed,
    GetAccountAuthorizationDetails,
    GetAccountPasswordPolicy,
    GetAccountSummary,
    GetContextKeysForCustomPolicy,
    GetContextKeysForPrincipalPolicy,
    GetCredentialReport,
    GetGroup,
    GetGroupPolicy,
    GetInstanceProfile,
    GetLoginProfile,
    GetMfaDevice,
    GetOpenIdConnectProvider,
    GetOrganizationsAccessReport,
    GetPaginator,
    GetPolicy,
    GetPolicyVersion,
    GetRole,
    GetRolePolicy,
    GetSamlProvider,
    GetServerCertificate,
    GetServiceLastAccessedDetails,
    GetServiceLastAccessedDetailsWithEntities,
    GetServiceLinkedRoleDeletionStatus,
    GetSshPublicKey,
    GetUser,
    GetUserPolicy,
    GetWaiter,
    ListAccessKeys,
    ListAccountAliases,
    ListAttachedGroupPolicies,
    ListAttachedRolePolicies,
    ListAttachedUserPolicies,
    ListEntitiesForPolicy,
    ListGroupPolicies,
    ListGroups,
    ListGroupsForUser,
    ListInstanceProfileTags,
    ListInstanceProfiles,
    ListInstanceProfilesForRole,
    ListMfaDeviceTags,
    ListMfaDevices,
    ListOpenIdConnectProviderTags,
    ListOpenIdConnectProviders,
    ListPolicies,
    ListPoliciesGrantingServiceAccess,
    ListPolicyTags,
    ListPolicyVersions,
    ListRolePolicies,
    ListRoleTags,
    ListRoles,
    ListSamlProviderTags,
    ListSamlProviders,
    ListServerCertificateTags,
    ListServerCertificates,
    ListServiceSpecificCredentials,
    ListSigningCertificates,
    ListSshPublicKeys,
    ListUserPolicies,
    ListUserTags,
    ListUsers,
    ListVirtualMfaDevices,
    PutGroupPolicy,
    PutRolePermissionsBoundary,
    PutRolePolicy,
    PutUserPermissionsBoundary,
    PutUserPolicy,
    RemoveClientIdFromOpenIdConnectProvider,
    RemoveRoleFromInstanceProfile,
    RemoveUserFromGroup,
    ResetServiceSpecificCredential,
    ResyncMfaDevice,
    SetDefaultPolicyVersion,
    SetSecurityTokenServicePreferences,
    SimulateCustomPolicy,
    SimulatePrincipalPolicy,
    TagInstanceProfile,
    TagMfaDevice,
    TagOpenIdConnectProvider,
    TagPolicy,
    TagRole,
    TagSamlProvider,
    TagServerCertificate,
    TagUser,
    UntagInstanceProfile,
    UntagMfaDevice,
    UntagOpenIdConnectProvider,
    UntagPolicy,
    UntagRole,
    UntagSamlProvider,
    UntagServerCertificate,
    UntagUser,
    UpdateAccessKey,
    UpdateAccountPasswordPolicy,
    UpdateAssumeRolePolicy,
    UpdateGroup,
    UpdateLoginProfile,
    UpdateOpenIdConnectProviderThumbprint,
    UpdateRole,
    UpdateRoleDescription,
    UpdateSamlProvider,
    UpdateServerCertificate,
    UpdateServiceSpecificCredential,
    UpdateSigningCertificate,
    UpdateSshPublicKey,
    UpdateUser,
    UploadServerCertificate,
    UploadSigningCertificate,
    UploadSshPublicKey,
    Unknown,
}

impl Iam {
    pub fn from_str(action_name: &str) -> Self {
        match action_name {
            "AddRoleToInstanceProfile" => Iam::AddRoleToInstanceProfile,
            "AddUserToGroup" => Iam::AddUserToGroup,
            "AttachGroupPolicy" => Iam::AttachGroupPolicy,
            "AttachRolePolicy" => Iam::AttachRolePolicy,
            "AttachUserPolicy" => Iam::AttachUserPolicy,
            "ChangePassword" => Iam::ChangePassword,
            "CreateAccessKey" => Iam::CreateAccessKey,
            "CreateAccountAlias" => Iam::CreateAccountAlias,
            "CreateGroup" => Iam::CreateGroup,
            "CreateInstanceProfile" => Iam::CreateInstanceProfile,
            "CreateLoginProfile" => Iam::CreateLoginProfile,
            "CreateOpenIdConnectProvider" => Iam::CreateOpenIdConnectProvider,
            "CreatePolicy" => Iam::CreatePolicy,
            "CreatePolicyVersion" => Iam::CreatePolicyVersion,
            "CreateRole" => Iam::CreateRole,
            "CreateSamlProvider" => Iam::CreateSamlProvider,
            "CreateServiceLinkedRole" => Iam::CreateServiceLinkedRole,
            "CreateServiceSpecificCredential" => Iam::CreateServiceSpecificCredential,
            "CreateUser" => Iam::CreateUser,
            "CreateVirtualMfaDevice" => Iam::CreateVirtualMfaDevice,
            "DeactivateMfaDevice" => Iam::DeactivateMfaDevice,
            "DeleteAccessKey" => Iam::DeleteAccessKey,
            "DeleteAccountAlias" => Iam::DeleteAccountAlias,
            "DeleteAccountPasswordPolicy" => Iam::DeleteAccountPasswordPolicy,
            "DeleteGroup" => Iam::DeleteGroup,
            "DeleteGroupPolicy" => Iam::DeleteGroupPolicy,
            "DeleteInstanceProfile" => Iam::DeleteInstanceProfile,
            "DeleteLoginProfile" => Iam::DeleteLoginProfile,
            "DeleteOpenIdConnectProvider" => Iam::DeleteOpenIdConnectProvider,
            "DeletePolicy" => Iam::DeletePolicy,
            "DeletePolicyVersion" => Iam::DeletePolicyVersion,
            "DeleteRole" => Iam::DeleteRole,
            "DeleteRolePermissionsBoundary" => Iam::DeleteRolePermissionsBoundary,
            "DeleteRolePolicy" => Iam::DeleteRolePolicy,
            "DeleteSamlProvider" => Iam::DeleteSamlProvider,
            "DeleteServerCertificate" => Iam::DeleteServerCertificate,
            "DeleteServiceLinkedRole" => Iam::DeleteServiceLinkedRole,
            "DeleteServiceSpecificCredential" => Iam::DeleteServiceSpecificCredential,
            "DeleteSigningCertificate" => Iam::DeleteSigningCertificate,
            "DeleteSshPublicKey" => Iam::DeleteSshPublicKey,
            "DeleteUser" => Iam::DeleteUser,
            "DeleteUserPermissionsBoundary" => Iam::DeleteUserPermissionsBoundary,
            "DeleteUserPolicy" => Iam::DeleteUserPolicy,
            "DeleteVirtualMfaDevice" => Iam::DeleteVirtualMfaDevice,
            "DetachGroupPolicy" => Iam::DetachGroupPolicy,
            "DetachRolePolicy" => Iam::DetachRolePolicy,
            "DetachUserPolicy" => Iam::DetachUserPolicy,
            "EnableMfaDevice" => Iam::EnableMfaDevice,
            "GenerateCredentialReport" => Iam::GenerateCredentialReport,
            "GenerateOrganizationsAccessReport" => Iam::GenerateOrganizationsAccessReport,
            "GenerateServiceLastAccessedDetails" => Iam::GenerateServiceLastAccessedDetails,
            "GetAccessKeyLastUsed" => Iam::GetAccessKeyLastUsed,
            "GetAccountAuthorizationDetails" => Iam::GetAccountAuthorizationDetails,
            "GetAccountPasswordPolicy" => Iam::GetAccountPasswordPolicy,
            "GetAccountSummary" => Iam::GetAccountSummary,
            "GetContextKeysForCustomPolicy" => Iam::GetContextKeysForCustomPolicy,
            "GetContextKeysForPrincipalPolicy" => Iam::GetContextKeysForPrincipalPolicy,
            "GetCredentialReport" => Iam::GetCredentialReport,
            "GetGroup" => Iam::GetGroup,
            "GetGroupPolicy" => Iam::GetGroupPolicy,
            "GetInstanceProfile" => Iam::GetInstanceProfile,
            "GetLoginProfile" => Iam::GetLoginProfile,
            "GetMfaDevice" => Iam::GetMfaDevice,
            "GetOpenIdConnectProvider" => Iam::GetOpenIdConnectProvider,
            "GetOrganizationsAccessReport" => Iam::GetOrganizationsAccessReport,
            "GetPaginator" => Iam::GetPaginator,
            "GetPolicy" => Iam::GetPolicy,
            "GetPolicyVersion" => Iam::GetPolicyVersion,
            "GetRole" => Iam::GetRole,
            "GetRolePolicy" => Iam::GetRolePolicy,
            "GetSamlProvider" => Iam::GetSamlProvider,
            "GetServerCertificate" => Iam::GetServerCertificate,
            "GetServiceLastAccessedDetails" => Iam::GetServiceLastAccessedDetails,
            "GetServiceLastAccessedDetailsWithEntities" => Iam::GetServiceLastAccessedDetailsWithEntities,
            "GetServiceLinkedRoleDeletionStatus" => Iam::GetServiceLinkedRoleDeletionStatus,
            "GetSshPublicKey" => Iam::GetSshPublicKey,
            "GetUser" => Iam::GetUser,
            "GetUserPolicy" => Iam::GetUserPolicy,
            "GetWaiter" => Iam::GetWaiter,
            "ListAccessKeys" => Iam::ListAccessKeys,
            "ListAccountAliases" => Iam::ListAccountAliases,
            "ListAttachedGroupPolicies" => Iam::ListAttachedGroupPolicies,
            "ListAttachedRolePolicies" => Iam::ListAttachedRolePolicies,
            "ListAttachedUserPolicies" => Iam::ListAttachedUserPolicies,
            "ListEntitiesForPolicy" => Iam::ListEntitiesForPolicy,
            "ListGroupPolicies" => Iam::ListGroupPolicies,
            "ListGroups" => Iam::ListGroups,
            "ListGroupsForUser" => Iam::ListGroupsForUser,
            "ListInstanceProfileTags" => Iam::ListInstanceProfileTags,
            "ListInstanceProfiles" => Iam::ListInstanceProfiles,
            "ListInstanceProfilesForRole" => Iam::ListInstanceProfilesForRole,
            "ListMfaDeviceTags" => Iam::ListMfaDeviceTags,
            "ListMfaDevices" => Iam::ListMfaDevices,
            "ListOpenIdConnectProviderTags" => Iam::ListOpenIdConnectProviderTags,
            "ListOpenIdConnectProviders" => Iam::ListOpenIdConnectProviders,
            "ListPolicies" => Iam::ListPolicies,
            "ListPoliciesGrantingServiceAccess" => Iam::ListPoliciesGrantingServiceAccess,
            "ListPolicyTags" => Iam::ListPolicyTags,
            "ListPolicyVersions" => Iam::ListPolicyVersions,
            "ListRolePolicies" => Iam::ListRolePolicies,
            "ListRoleTags" => Iam::ListRoleTags,
            "ListRoles" => Iam::ListRoles,
            "ListSamlProviderTags" => Iam::ListSamlProviderTags,
            "ListSamlProviders" => Iam::ListSamlProviders,
            "ListServerCertificateTags" => Iam::ListServerCertificateTags,
            "ListServerCertificates" => Iam::ListServerCertificates,
            "ListServiceSpecificCredentials" => Iam::ListServiceSpecificCredentials,
            "ListSigningCertificates" => Iam::ListSigningCertificates,
            "ListSshPublicKeys" => Iam::ListSshPublicKeys,
            "ListUserPolicies" => Iam::ListUserPolicies,
            "ListUserTags" => Iam::ListUserTags,
            "ListUsers" => Iam::ListUsers,
            "ListVirtualMfaDevices" => Iam::ListVirtualMfaDevices,
            "PutGroupPolicy" => Iam::PutGroupPolicy,
            "PutRolePermissionsBoundary" => Iam::PutRolePermissionsBoundary,
            "PutRolePolicy" => Iam::PutRolePolicy,
            "PutUserPermissionsBoundary" => Iam::PutUserPermissionsBoundary,
            "PutUserPolicy" => Iam::PutUserPolicy,
            "RemoveClientIdFromOpenIdConnectProvider" => Iam::RemoveClientIdFromOpenIdConnectProvider,
            "RemoveRoleFromInstanceProfile" => Iam::RemoveRoleFromInstanceProfile,
            "RemoveUserFromGroup" => Iam::RemoveUserFromGroup,
            "ResetServiceSpecificCredential" => Iam::ResetServiceSpecificCredential,
            "ResyncMfaDevice" => Iam::ResyncMfaDevice,
            "SetDefaultPolicyVersion" => Iam::SetDefaultPolicyVersion,
            "SetSecurityTokenServicePreferences" => Iam::SetSecurityTokenServicePreferences,
            "SimulateCustomPolicy" => Iam::SimulateCustomPolicy,
            "SimulatePrincipalPolicy" => Iam::SimulatePrincipalPolicy,
            "TagInstanceProfile" => Iam::TagInstanceProfile,
            "TagMfaDevice" => Iam::TagMfaDevice,
            "TagOpenIdConnectProvider" => Iam::TagOpenIdConnectProvider,
            "TagPolicy" => Iam::TagPolicy,
            "TagRole" => Iam::TagRole,
            "TagSamlProvider" => Iam::TagSamlProvider,
            "TagServerCertificate" => Iam::TagServerCertificate,
            "TagUser" => Iam::TagUser,
            "UntagInstanceProfile" => Iam::UntagInstanceProfile,
            "UntagMfaDevice" => Iam::UntagMfaDevice,
            "UntagOpenIdConnectProvider" => Iam::UntagOpenIdConnectProvider,
            "UntagPolicy" => Iam::UntagPolicy,
            "UntagRole" => Iam::UntagRole,
            "UntagSamlProvider" => Iam::UntagSamlProvider,
            "UntagServerCertificate" => Iam::UntagServerCertificate,
            "UntagUser" => Iam::UntagUser,
            "UpdateAccessKey" => Iam::UpdateAccessKey,
            "UpdateAccountPasswordPolicy" => Iam::UpdateAccountPasswordPolicy,
            "UpdateAssumeRolePolicy" => Iam::UpdateAssumeRolePolicy,
            "UpdateGroup" => Iam::UpdateGroup,
            "UpdateLoginProfile" => Iam::UpdateLoginProfile,
            "UpdateOpenIdConnectProviderThumbprint" => Iam::UpdateOpenIdConnectProviderThumbprint,
            "UpdateRole" => Iam::UpdateRole,
            "UpdateRoleDescription" => Iam::UpdateRoleDescription,
            "UpdateSamlProvider" => Iam::UpdateSamlProvider,
            "UpdateServerCertificate" => Iam::UpdateServerCertificate,
            "UpdateServiceSpecificCredential" => Iam::UpdateServiceSpecificCredential,
            "UpdateSigningCertificate" => Iam::UpdateSigningCertificate,
            "UpdateSshPublicKey" => Iam::UpdateSshPublicKey,
            "UpdateUser" => Iam::UpdateUser,
            "UploadServerCertificate" => Iam::UploadServerCertificate,
            "UploadSigningCertificate" => Iam::UploadSigningCertificate,
            "UploadSshPublicKey" => Iam::UploadSshPublicKey,
            _ => Iam::Unknown,
        }
    }
}

fn unsupported() -> HttpResponse {
    let mut out = String::new();
    let mut doc = XmlWriter::new(&mut out);

    let mut error_tag = doc.start_el("error").write_ns(XMLNS, None).finish();
    local_rust_cloud_xml::write_tag_with_value(&mut error_tag, "code", Some("InternalFailure"));
    local_rust_cloud_xml::write_tag_with_value(&mut error_tag, "message", Some("The Action is unsupported at the moment"));
    error_tag.finish();
    HttpResponse::with_body(StatusCode::OK, BoxBody::new(out))
}

impl ServiceHandler for Iam {
    fn handle(self, req: &HttpRequest, params: HashMap<String, String>) -> HttpResponse {
        let request_id = Uuid::new_v4().to_string();

        let query_reader = QueryReader::new(params);
        let db = req.app_data::<Data<Database>>().expect("failed to get access to DB").as_ref();
        let mut response = match self {
            Iam::AddRoleToInstanceProfile => unsupported(),
            Iam::AddUserToGroup => unsupported(),
            Iam::AttachGroupPolicy => unsupported(),
            Iam::AttachRolePolicy => unsupported(),
            Iam::AttachUserPolicy => unsupported(),
            Iam::ChangePassword => unsupported(),
            Iam::CreateAccessKey => unsupported(),
            Iam::CreateAccountAlias => unsupported(),
            Iam::CreateGroup => unsupported(),
            Iam::CreateInstanceProfile => unsupported(),
            Iam::CreateLoginProfile => unsupported(),
            Iam::CreateOpenIdConnectProvider => unsupported(),
            Iam::CreatePolicy => {
                let output = block_on(Iam::create_policy(db, request_id, query_reader)).unwrap();
                let body: String = output.into();
                HttpResponse::with_body(StatusCode::OK, BoxBody::new(body))
            }
            Iam::CreatePolicyVersion => unsupported(),
            Iam::CreateRole => unsupported(),
            Iam::CreateSamlProvider => unsupported(),
            Iam::CreateServiceLinkedRole => unsupported(),
            Iam::CreateServiceSpecificCredential => unsupported(),
            Iam::CreateUser => {
                let output = block_on(Iam::create_user(db, request_id, query_reader)).unwrap();
                let body: String = output.into();
                HttpResponse::with_body(StatusCode::OK, BoxBody::new(body))
            }
            Iam::CreateVirtualMfaDevice => unsupported(),
            Iam::DeactivateMfaDevice => unsupported(),
            Iam::DeleteAccessKey => unsupported(),
            Iam::DeleteAccountAlias => unsupported(),
            Iam::DeleteAccountPasswordPolicy => unsupported(),
            Iam::DeleteGroup => unsupported(),
            Iam::DeleteGroupPolicy => unsupported(),
            Iam::DeleteInstanceProfile => unsupported(),
            Iam::DeleteLoginProfile => unsupported(),
            Iam::DeleteOpenIdConnectProvider => unsupported(),
            Iam::DeletePolicy => unsupported(),
            Iam::DeletePolicyVersion => unsupported(),
            Iam::DeleteRole => unsupported(),
            Iam::DeleteRolePermissionsBoundary => unsupported(),
            Iam::DeleteRolePolicy => unsupported(),
            Iam::DeleteSamlProvider => unsupported(),
            Iam::DeleteServerCertificate => unsupported(),
            Iam::DeleteServiceLinkedRole => unsupported(),
            Iam::DeleteServiceSpecificCredential => unsupported(),
            Iam::DeleteSigningCertificate => unsupported(),
            Iam::DeleteSshPublicKey => unsupported(),
            Iam::DeleteUser => unsupported(),
            Iam::DeleteUserPermissionsBoundary => unsupported(),
            Iam::DeleteUserPolicy => unsupported(),
            Iam::DeleteVirtualMfaDevice => unsupported(),
            Iam::DetachGroupPolicy => unsupported(),
            Iam::DetachRolePolicy => unsupported(),
            Iam::DetachUserPolicy => unsupported(),
            Iam::EnableMfaDevice => unsupported(),
            Iam::GenerateCredentialReport => unsupported(),
            Iam::GenerateOrganizationsAccessReport => unsupported(),
            Iam::GenerateServiceLastAccessedDetails => unsupported(),
            Iam::GetAccessKeyLastUsed => unsupported(),
            Iam::GetAccountAuthorizationDetails => unsupported(),
            Iam::GetAccountPasswordPolicy => unsupported(),
            Iam::GetAccountSummary => unsupported(),
            Iam::GetContextKeysForCustomPolicy => unsupported(),
            Iam::GetContextKeysForPrincipalPolicy => unsupported(),
            Iam::GetCredentialReport => unsupported(),
            Iam::GetGroup => unsupported(),
            Iam::GetGroupPolicy => unsupported(),
            Iam::GetInstanceProfile => unsupported(),
            Iam::GetLoginProfile => unsupported(),
            Iam::GetMfaDevice => unsupported(),
            Iam::GetOpenIdConnectProvider => unsupported(),
            Iam::GetOrganizationsAccessReport => unsupported(),
            Iam::GetPaginator => unsupported(),
            Iam::GetPolicy => unsupported(),
            Iam::GetPolicyVersion => unsupported(),
            Iam::GetRole => unsupported(),
            Iam::GetRolePolicy => unsupported(),
            Iam::GetSamlProvider => unsupported(),
            Iam::GetServerCertificate => unsupported(),
            Iam::GetServiceLastAccessedDetails => unsupported(),
            Iam::GetServiceLastAccessedDetailsWithEntities => unsupported(),
            Iam::GetServiceLinkedRoleDeletionStatus => unsupported(),
            Iam::GetSshPublicKey => unsupported(),
            Iam::GetUser => unsupported(),
            Iam::GetUserPolicy => unsupported(),
            Iam::GetWaiter => unsupported(),
            Iam::ListAccessKeys => unsupported(),
            Iam::ListAccountAliases => unsupported(),
            Iam::ListAttachedGroupPolicies => unsupported(),
            Iam::ListAttachedRolePolicies => unsupported(),
            Iam::ListAttachedUserPolicies => unsupported(),
            Iam::ListEntitiesForPolicy => unsupported(),
            Iam::ListGroupPolicies => unsupported(),
            Iam::ListGroups => unsupported(),
            Iam::ListGroupsForUser => unsupported(),
            Iam::ListInstanceProfileTags => unsupported(),
            Iam::ListInstanceProfiles => unsupported(),
            Iam::ListInstanceProfilesForRole => unsupported(),
            Iam::ListMfaDeviceTags => unsupported(),
            Iam::ListMfaDevices => unsupported(),
            Iam::ListOpenIdConnectProviderTags => unsupported(),
            Iam::ListOpenIdConnectProviders => unsupported(),
            Iam::ListPolicies => unsupported(),
            Iam::ListPoliciesGrantingServiceAccess => unsupported(),
            Iam::ListPolicyTags => unsupported(),
            Iam::ListPolicyVersions => unsupported(),
            Iam::ListRolePolicies => unsupported(),
            Iam::ListRoleTags => unsupported(),
            Iam::ListRoles => unsupported(),
            Iam::ListSamlProviderTags => unsupported(),
            Iam::ListSamlProviders => unsupported(),
            Iam::ListServerCertificateTags => unsupported(),
            Iam::ListServerCertificates => unsupported(),
            Iam::ListServiceSpecificCredentials => unsupported(),
            Iam::ListSigningCertificates => unsupported(),
            Iam::ListSshPublicKeys => unsupported(),
            Iam::ListUserPolicies => unsupported(),
            Iam::ListUserTags => unsupported(),
            Iam::ListUsers => unsupported(),
            Iam::ListVirtualMfaDevices => unsupported(),
            Iam::PutGroupPolicy => unsupported(),
            Iam::PutRolePermissionsBoundary => unsupported(),
            Iam::PutRolePolicy => unsupported(),
            Iam::PutUserPermissionsBoundary => unsupported(),
            Iam::PutUserPolicy => unsupported(),
            Iam::RemoveClientIdFromOpenIdConnectProvider => unsupported(),
            Iam::RemoveRoleFromInstanceProfile => unsupported(),
            Iam::RemoveUserFromGroup => unsupported(),
            Iam::ResetServiceSpecificCredential => unsupported(),
            Iam::ResyncMfaDevice => unsupported(),
            Iam::SetDefaultPolicyVersion => unsupported(),
            Iam::SetSecurityTokenServicePreferences => unsupported(),
            Iam::SimulateCustomPolicy => unsupported(),
            Iam::SimulatePrincipalPolicy => unsupported(),
            Iam::TagInstanceProfile => unsupported(),
            Iam::TagMfaDevice => unsupported(),
            Iam::TagOpenIdConnectProvider => unsupported(),
            Iam::TagPolicy => unsupported(),
            Iam::TagRole => unsupported(),
            Iam::TagSamlProvider => unsupported(),
            Iam::TagServerCertificate => unsupported(),
            Iam::TagUser => unsupported(),
            Iam::UntagInstanceProfile => unsupported(),
            Iam::UntagMfaDevice => unsupported(),
            Iam::UntagOpenIdConnectProvider => unsupported(),
            Iam::UntagPolicy => unsupported(),
            Iam::UntagRole => unsupported(),
            Iam::UntagSamlProvider => unsupported(),
            Iam::UntagServerCertificate => unsupported(),
            Iam::UntagUser => unsupported(),
            Iam::UpdateAccessKey => unsupported(),
            Iam::UpdateAccountPasswordPolicy => unsupported(),
            Iam::UpdateAssumeRolePolicy => unsupported(),
            Iam::UpdateGroup => unsupported(),
            Iam::UpdateLoginProfile => unsupported(),
            Iam::UpdateOpenIdConnectProviderThumbprint => unsupported(),
            Iam::UpdateRole => unsupported(),
            Iam::UpdateRoleDescription => unsupported(),
            Iam::UpdateSamlProvider => unsupported(),
            Iam::UpdateServerCertificate => unsupported(),
            Iam::UpdateServiceSpecificCredential => unsupported(),
            Iam::UpdateSigningCertificate => unsupported(),
            Iam::UpdateSshPublicKey => unsupported(),
            Iam::UpdateUser => unsupported(),
            Iam::UploadServerCertificate => unsupported(),
            Iam::UploadSigningCertificate => unsupported(),
            Iam::UploadSshPublicKey => unsupported(),
            _ => unsupported(),
        };
        response
            .headers_mut()
            .append(HeaderName::from_static("content-type"), HeaderValue::from_static("application/xml"));
        return response;
    }
}
